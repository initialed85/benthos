name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: '0,30 * * * *' # Every 30 mins

jobs:
  cross-build:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: 0
    steps:

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: make

  test:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18.x

    - name: Checkout code
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Deps
      run: make deps && git diff-index --quiet HEAD || { >&2 echo "Stale go.{mod,sum} detected. This can be fixed with 'make deps'."; exit 1; }

    - name: Docs
      run: make docs && git diff-index --quiet HEAD || { >&2 echo "Stale docs detected. This can be fixed with 'make docs'."; exit 1; }

    - name: Test
      run: make test

  golangci-lint:
    if: ${{ github.repository == 'benthosdev/benthos' || github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
        args: --timeout 10m cmd/... internal/... public/...
